package org.example.hellospring;import java.io.BufferedReader;import java.io.IOException;import java.io.InputStream;import java.io.InputStreamReader;import java.math.BigDecimal;import java.net.HttpURLConnection;import java.net.MalformedURLException;import java.net.URL;import java.net.URLConnection;import java.time.LocalDateTime;import java.util.Currency;import java.util.stream.Collectors;import com.fasterxml.jackson.databind.ObjectMapper;public class PaymentService {	public Payment prepare(Long orderId, String currency, BigDecimal foreignCurrencyAmount) throws		IOException {		// 환율 가져오기		URL url = new URL("https://open.er-api.com/v6/latest/USD");		HttpURLConnection urlConnection =(HttpURLConnection) url.openConnection();		BufferedReader br = new BufferedReader(new InputStreamReader(urlConnection.getInputStream()));		String response = br.lines().collect(Collectors.joining());		br.close();		var objectMapper= new ObjectMapper();		ExRateData data = objectMapper.readValue(response, ExRateData.class);		BigDecimal exRate = data.rates().get("KRW");		// 금액 계산 하기		BigDecimal convertedAmount = foreignCurrencyAmount.multiply(exRate);		// 유효 시간 계산		LocalDateTime validUntil = LocalDateTime.now().plusMinutes(30);		return new Payment(orderId, currency, foreignCurrencyAmount, exRate, convertedAmount, validUntil);	}	public static void main (String[] args) throws IOException {		PaymentService paymentService = new PaymentService();		System.out.println(paymentService.prepare(100L,"USD",BigDecimal.valueOf(50.7)));		//Payment payment = new Payment();		//System.out.println(payment);		/*		* 결과값 : Payment@4c873330		* toString() 메소드를 재정의하지 않았기 때문에 자바 Object 안에 toString 이 호출되어, 객체 이름 + 메모리 주소가 리턴된다.		* */		// System.out.println(paymentService.prepare(100L, "USD",BigDecimal.valueOf(50.7)));	}}